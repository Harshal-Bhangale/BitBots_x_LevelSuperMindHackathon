/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/chat/page";
exports.ids = ["app/chat/page"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fchat%2Fpage&page=%2Fchat%2Fpage&appPaths=%2Fchat%2Fpage&pagePath=private-next-app-dir%2Fchat%2Fpage.tsx&appDir=D%3A%5CHackathon%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5CTC%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5CBitBots_x_LevelSuperMindHackathon%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CHackathon%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5CTC%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5CBitBots_x_LevelSuperMindHackathon&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fchat%2Fpage&page=%2Fchat%2Fpage&appPaths=%2Fchat%2Fpage&pagePath=private-next-app-dir%2Fchat%2Fpage.tsx&appDir=D%3A%5CHackathon%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5CTC%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5CBitBots_x_LevelSuperMindHackathon%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CHackathon%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5CTC%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5CBitBots_x_LevelSuperMindHackathon&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/module.compiled.js?d969\");\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"originalPathname\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\"TURBOPACK { transition: next-ssr }\";\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'chat',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/chat/page.tsx */ \"(rsc)/./app/chat/page.tsx\")), \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      },\n        {\n        'layout': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/layout.tsx */ \"(rsc)/./app/layout.tsx\")), \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\layout.tsx\"],\n'not-found': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23)), \"next/dist/client/components/not-found-error\"],\n        metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      }.children;\nconst pages = [\"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst originalPathname = \"/chat/page\";\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/chat/page\",\n        pathname: \"/chat\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZjaGF0JTJGcGFnZSZwYWdlPSUyRmNoYXQlMkZwYWdlJmFwcFBhdGhzPSUyRmNoYXQlMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGY2hhdCUyRnBhZ2UudHN4JmFwcERpcj1EJTNBJTVDSGFja2F0aG9uJTVDTGV2ZWwlMjBTdXBlciUyME1pbmQlMjBIYWNrYXRob24lMjAtJTIwMjAyNSU1Q1RDJTVDQml0Qm90cyUyMHglMjBMZXZlbCUyMFN1cGVyTWluZCUyMEhhY2thdGhvbiU1Q0JpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvbiU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RCUzQSU1Q0hhY2thdGhvbiU1Q0xldmVsJTIwU3VwZXIlMjBNaW5kJTIwSGFja2F0aG9uJTIwLSUyMDIwMjUlNUNUQyU1Q0JpdEJvdHMlMjB4JTIwTGV2ZWwlMjBTdXBlck1pbmQlMjBIYWNrYXRob24lNUNCaXRCb3RzX3hfTGV2ZWxTdXBlck1pbmRIYWNrYXRob24maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxhQUFhLHNCQUFzQjtBQUNpRTtBQUNyQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsdUJBQXVCLGtKQUFzTDtBQUM3TTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDhlQUEwVTtBQUM5VztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLHlCQUF5Qiw0SUFBa0w7QUFDM00sb0JBQW9CLDBOQUFnRjtBQUNwRztBQUNBLG9DQUFvQyw4ZUFBMFU7QUFDOVc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDdUI7QUFDNkQ7QUFDcEYsNkJBQTZCLG1CQUFtQjtBQUNoRDtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDdUQ7QUFDdkQ7QUFDTyx3QkFBd0IsOEdBQWtCO0FBQ2pEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXQtYXBwLz9lYmJmIl0sInNvdXJjZXNDb250ZW50IjpbIlwiVFVSQk9QQUNLIHsgdHJhbnNpdGlvbjogbmV4dC1zc3IgfVwiO1xuaW1wb3J0IHsgQXBwUGFnZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXBhZ2UvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuLy8gV2UgaW5qZWN0IHRoZSB0cmVlIGFuZCBwYWdlcyBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgdHJlZSA9IHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJycsXG4gICAgICAgIHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJ2NoYXQnLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbJ19fUEFHRV9fJywge30sIHtcbiAgICAgICAgICBwYWdlOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxIYWNrYXRob25cXFxcTGV2ZWwgU3VwZXIgTWluZCBIYWNrYXRob24gLSAyMDI1XFxcXFRDXFxcXEJpdEJvdHMgeCBMZXZlbCBTdXBlck1pbmQgSGFja2F0aG9uXFxcXEJpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvblxcXFxhcHBcXFxcY2hhdFxcXFxwYWdlLnRzeFwiKSwgXCJEOlxcXFxIYWNrYXRob25cXFxcTGV2ZWwgU3VwZXIgTWluZCBIYWNrYXRob24gLSAyMDI1XFxcXFRDXFxcXEJpdEJvdHMgeCBMZXZlbCBTdXBlck1pbmQgSGFja2F0aG9uXFxcXEJpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvblxcXFxhcHBcXFxcY2hhdFxcXFxwYWdlLnRzeFwiXSxcbiAgICAgICAgICBcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgXG4gICAgICAgIG1ldGFkYXRhOiB7XG4gICAgaWNvbjogWyhhc3luYyAocHJvcHMpID0+IChhd2FpdCBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQtbWV0YWRhdGEtaW1hZ2UtbG9hZGVyP3R5cGU9ZmF2aWNvbiZzZWdtZW50PSZiYXNlUGF0aD0mcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyFEOlxcXFxIYWNrYXRob25cXFxcTGV2ZWwgU3VwZXIgTWluZCBIYWNrYXRob24gLSAyMDI1XFxcXFRDXFxcXEJpdEJvdHMgeCBMZXZlbCBTdXBlck1pbmQgSGFja2F0aG9uXFxcXEJpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvblxcXFxhcHBcXFxcZmF2aWNvbi5pY28/X19uZXh0X21ldGFkYXRhX19cIikpLmRlZmF1bHQocHJvcHMpKV0sXG4gICAgYXBwbGU6IFtdLFxuICAgIG9wZW5HcmFwaDogW10sXG4gICAgdHdpdHRlcjogW10sXG4gICAgbWFuaWZlc3Q6IHVuZGVmaW5lZFxuICB9XG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICdsYXlvdXQnOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxIYWNrYXRob25cXFxcTGV2ZWwgU3VwZXIgTWluZCBIYWNrYXRob24gLSAyMDI1XFxcXFRDXFxcXEJpdEJvdHMgeCBMZXZlbCBTdXBlck1pbmQgSGFja2F0aG9uXFxcXEJpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvblxcXFxhcHBcXFxcbGF5b3V0LnRzeFwiKSwgXCJEOlxcXFxIYWNrYXRob25cXFxcTGV2ZWwgU3VwZXIgTWluZCBIYWNrYXRob24gLSAyMDI1XFxcXFRDXFxcXEJpdEJvdHMgeCBMZXZlbCBTdXBlck1pbmQgSGFja2F0aG9uXFxcXEJpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvblxcXFxhcHBcXFxcbGF5b3V0LnRzeFwiXSxcbidub3QtZm91bmQnOiBbKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWVycm9yXCIpLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIl0sXG4gICAgICAgIG1ldGFkYXRhOiB7XG4gICAgaWNvbjogWyhhc3luYyAocHJvcHMpID0+IChhd2FpdCBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQtbWV0YWRhdGEtaW1hZ2UtbG9hZGVyP3R5cGU9ZmF2aWNvbiZzZWdtZW50PSZiYXNlUGF0aD0mcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyFEOlxcXFxIYWNrYXRob25cXFxcTGV2ZWwgU3VwZXIgTWluZCBIYWNrYXRob24gLSAyMDI1XFxcXFRDXFxcXEJpdEJvdHMgeCBMZXZlbCBTdXBlck1pbmQgSGFja2F0aG9uXFxcXEJpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvblxcXFxhcHBcXFxcZmF2aWNvbi5pY28/X19uZXh0X21ldGFkYXRhX19cIikpLmRlZmF1bHQocHJvcHMpKV0sXG4gICAgYXBwbGU6IFtdLFxuICAgIG9wZW5HcmFwaDogW10sXG4gICAgdHdpdHRlcjogW10sXG4gICAgbWFuaWZlc3Q6IHVuZGVmaW5lZFxuICB9XG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LmNoaWxkcmVuO1xuY29uc3QgcGFnZXMgPSBbXCJEOlxcXFxIYWNrYXRob25cXFxcTGV2ZWwgU3VwZXIgTWluZCBIYWNrYXRob24gLSAyMDI1XFxcXFRDXFxcXEJpdEJvdHMgeCBMZXZlbCBTdXBlck1pbmQgSGFja2F0aG9uXFxcXEJpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvblxcXFxhcHBcXFxcY2hhdFxcXFxwYWdlLnRzeFwiXTtcbmV4cG9ydCB7IHRyZWUsIHBhZ2VzIH07XG5leHBvcnQgeyBkZWZhdWx0IGFzIEdsb2JhbEVycm9yIH0gZnJvbSBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeVwiO1xuY29uc3QgX19uZXh0X2FwcF9yZXF1aXJlX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fXG5jb25zdCBfX25leHRfYXBwX2xvYWRfY2h1bmtfXyA9ICgpID0+IFByb21pc2UucmVzb2x2ZSgpXG5leHBvcnQgY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2NoYXQvcGFnZVwiO1xuZXhwb3J0IGNvbnN0IF9fbmV4dF9hcHBfXyA9IHtcbiAgICByZXF1aXJlOiBfX25leHRfYXBwX3JlcXVpcmVfXyxcbiAgICBsb2FkQ2h1bms6IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fXG59O1xuZXhwb3J0ICogZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvYXBwLXJlbmRlci9lbnRyeS1iYXNlXCI7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBQYWdlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9QQUdFLFxuICAgICAgICBwYWdlOiBcIi9jaGF0L3BhZ2VcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2NoYXRcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIixcbiAgICAgICAgYXBwUGF0aHM6IFtdXG4gICAgfSxcbiAgICB1c2VybGFuZDoge1xuICAgICAgICBsb2FkZXJUcmVlOiB0cmVlXG4gICAgfVxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1wYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fchat%2Fpage&page=%2Fchat%2Fpage&appPaths=%2Fchat%2Fpage&pagePath=private-next-app-dir%2Fchat%2Fpage.tsx&appDir=D%3A%5CHackathon%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5CTC%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5CBitBots_x_LevelSuperMindHackathon%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CHackathon%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5CTC%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5CBitBots_x_LevelSuperMindHackathon&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Capp%5C%5Cchat%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Capp%5C%5Cchat%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/chat/page.tsx */ \"(ssr)/./app/chat/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNIYWNrYXRob24lNUMlNUNMZXZlbCUyMFN1cGVyJTIwTWluZCUyMEhhY2thdGhvbiUyMC0lMjAyMDI1JTVDJTVDVEMlNUMlNUNCaXRCb3RzJTIweCUyMExldmVsJTIwU3VwZXJNaW5kJTIwSGFja2F0aG9uJTVDJTVDQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uJTVDJTVDYXBwJTVDJTVDY2hhdCU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxrSkFBc0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0LWFwcC8/NjM0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXEhhY2thdGhvblxcXFxMZXZlbCBTdXBlciBNaW5kIEhhY2thdGhvbiAtIDIwMjVcXFxcVENcXFxcQml0Qm90cyB4IExldmVsIFN1cGVyTWluZCBIYWNrYXRob25cXFxcQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uXFxcXGFwcFxcXFxjaGF0XFxcXHBhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Capp%5C%5Cchat%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Capp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Capp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/app-router.js */ \"(ssr)/./node_modules/next/dist/client/components/app-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/not-found-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/not-found-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNIYWNrYXRob24lNUMlNUNMZXZlbCUyMFN1cGVyJTIwTWluZCUyMEhhY2thdGhvbiUyMC0lMjAyMDI1JTVDJTVDVEMlNUMlNUNCaXRCb3RzJTIweCUyMExldmVsJTIwU3VwZXJNaW5kJTIwSGFja2F0aG9uJTVDJTVDQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDYXBwLXJvdXRlci5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDSGFja2F0aG9uJTVDJTVDTGV2ZWwlMjBTdXBlciUyME1pbmQlMjBIYWNrYXRob24lMjAtJTIwMjAyNSU1QyU1Q1RDJTVDJTVDQml0Qm90cyUyMHglMjBMZXZlbCUyMFN1cGVyTWluZCUyMEhhY2thdGhvbiU1QyU1Q0JpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvbiU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2NsaWVudC1wYWdlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNIYWNrYXRob24lNUMlNUNMZXZlbCUyMFN1cGVyJTIwTWluZCUyMEhhY2thdGhvbiUyMC0lMjAyMDI1JTVDJTVDVEMlNUMlNUNCaXRCb3RzJTIweCUyMExldmVsJTIwU3VwZXJNaW5kJTIwSGFja2F0aG9uJTVDJTVDQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDZXJyb3ItYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q0hhY2thdGhvbiU1QyU1Q0xldmVsJTIwU3VwZXIlMjBNaW5kJTIwSGFja2F0aG9uJTIwLSUyMDIwMjUlNUMlNUNUQyU1QyU1Q0JpdEJvdHMlMjB4JTIwTGV2ZWwlMjBTdXBlck1pbmQlMjBIYWNrYXRob24lNUMlNUNCaXRCb3RzX3hfTGV2ZWxTdXBlck1pbmRIYWNrYXRob24lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNIYWNrYXRob24lNUMlNUNMZXZlbCUyMFN1cGVyJTIwTWluZCUyMEhhY2thdGhvbiUyMC0lMjAyMDI1JTVDJTVDVEMlNUMlNUNCaXRCb3RzJTIweCUyMExldmVsJTIwU3VwZXJNaW5kJTIwSGFja2F0aG9uJTVDJTVDQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDbm90LWZvdW5kLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNIYWNrYXRob24lNUMlNUNMZXZlbCUyMFN1cGVyJTIwTWluZCUyMEhhY2thdGhvbiUyMC0lMjAyMDI1JTVDJTVDVEMlNUMlNUNCaXRCb3RzJTIweCUyMExldmVsJTIwU3VwZXJNaW5kJTIwSGFja2F0aG9uJTVDJTVDQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDcmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsa09BQThOO0FBQzlOO0FBQ0Esb09BQStOO0FBQy9OO0FBQ0EsME9BQWtPO0FBQ2xPO0FBQ0Esd09BQWlPO0FBQ2pPO0FBQ0Esa1BBQXNPO0FBQ3RPO0FBQ0Esc1FBQWdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2hhdC1hcHAvP2Q1YjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxIYWNrYXRob25cXFxcTGV2ZWwgU3VwZXIgTWluZCBIYWNrYXRob24gLSAyMDI1XFxcXFRDXFxcXEJpdEJvdHMgeCBMZXZlbCBTdXBlck1pbmQgSGFja2F0aG9uXFxcXEJpdEJvdHNfeF9MZXZlbFN1cGVyTWluZEhhY2thdGhvblxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGFwcC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXEhhY2thdGhvblxcXFxMZXZlbCBTdXBlciBNaW5kIEhhY2thdGhvbiAtIDIwMjVcXFxcVENcXFxcQml0Qm90cyB4IExldmVsIFN1cGVyTWluZCBIYWNrYXRob25cXFxcQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXEhhY2thdGhvblxcXFxMZXZlbCBTdXBlciBNaW5kIEhhY2thdGhvbiAtIDIwMjVcXFxcVENcXFxcQml0Qm90cyB4IExldmVsIFN1cGVyTWluZCBIYWNrYXRob25cXFxcQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXEhhY2thdGhvblxcXFxMZXZlbCBTdXBlciBNaW5kIEhhY2thdGhvbiAtIDIwMjVcXFxcVENcXFxcQml0Qm90cyB4IExldmVsIFN1cGVyTWluZCBIYWNrYXRob25cXFxcQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcSGFja2F0aG9uXFxcXExldmVsIFN1cGVyIE1pbmQgSGFja2F0aG9uIC0gMjAyNVxcXFxUQ1xcXFxCaXRCb3RzIHggTGV2ZWwgU3VwZXJNaW5kIEhhY2thdGhvblxcXFxCaXRCb3RzX3hfTGV2ZWxTdXBlck1pbmRIYWNrYXRob25cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxub3QtZm91bmQtYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXEhhY2thdGhvblxcXFxMZXZlbCBTdXBlciBNaW5kIEhhY2thdGhvbiAtIDIwMjVcXFxcVENcXFxcQml0Qm90cyB4IExldmVsIFN1cGVyTWluZCBIYWNrYXRob25cXFxcQml0Qm90c194X0xldmVsU3VwZXJNaW5kSGFja2F0aG9uXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxccmVuZGVyLWZyb20tdGVtcGxhdGUtY29udGV4dC5qc1wiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Capp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5CHackathon%5C%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5C%5CTC%5C%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5C%5CBitBots_x_LevelSuperMindHackathon%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "(ssr)/./app/chat/page.tsx":
/*!***************************!*\
  !*** ./app/chat/page.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=BotIcon,HomeIcon,Loader2,SendIcon,UserIcon!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/house.js\");\n/* harmony import */ var _barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=BotIcon,HomeIcon,Loader2,SendIcon,UserIcon!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/user.js\");\n/* harmony import */ var _barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=BotIcon,HomeIcon,Loader2,SendIcon,UserIcon!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/bot.js\");\n/* harmony import */ var _barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=BotIcon,HomeIcon,Loader2,SendIcon,UserIcon!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* harmony import */ var _barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=BotIcon,HomeIcon,Loader2,SendIcon,UserIcon!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/send.js\");\n// 'use client'\n// import React, { useState, useRef, useEffect } from 'react'\n// import { motion } from 'framer-motion'\n// import { SendIcon, BotIcon, UserIcon } from 'lucide-react'\n// interface Message {\n//   id: number;\n//   text: string;\n//   sender: 'user' | 'ai';\n//   timestamp: Date;\n// }\n// const GlowingCard = ({ children, className = \"\" }) => (\n//   <div className={`relative ${className}`}>\n//     <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg blur opacity-75 group-hover:opacity-100 transition duration-1000 group-hover:duration-200\"></div>\n//     <div className=\"relative bg-black bg-opacity-50 rounded-lg p-6 ring-1 ring-gray-900/5 shadow-lg\">\n//       {children}\n//     </div>\n//   </div>\n// )\n// const ShimmeringButton = ({ children, onClick, className = \"\" }) => (\n//   <button\n//     onClick={onClick}\n//     className={`relative px-6 py-3 font-bold text-white rounded-full group ${className}`}\n//   >\n//     <span className=\"absolute inset-0 w-full h-full transition duration-300 transform -translate-x-1 -translate-y-1 bg-purple-800 ease opacity-80 group-hover:translate-x-0 group-hover:translate-y-0\"></span>\n//     <span className=\"absolute inset-0 w-full h-full transition duration-300 transform translate-x-1 translate-y-1 bg-pink-800 ease opacity-80 group-hover:translate-x-0 group-hover:translate-y-0 mix-blend-screen\"></span>\n//     <span className=\"relative\">{children}</span>\n//   </button>\n// )\n// function ChatPage() {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [inputMessage, setInputMessage] = useState('');\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n//   useEffect(scrollToBottom, [messages]);\n//   const handleSendMessage = async () => {\n//     if (inputMessage.trim() === '') return;\n//     const newMessage: Message = {\n//       id: Date.now(),\n//       text: inputMessage,\n//       sender: 'user',\n//       timestamp: new Date(),\n//     };\n//     setMessages([...messages, newMessage]);\n//     setInputMessage('');\n//     setIsTyping(true);\n//     try {\n//       const response = await fetch('/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ message: inputMessage }),\n//       });\n//       const data = await response.json();\n//       // Extract the AI's response from the nested structure\n//       const aiResponseText = data.outputs[0].outputs[0].outputs.message.message.text;\n//       const aiResponse: Message = {\n//         id: Date.now() + 1,\n//         text: aiResponseText || \"Sorry, I couldn't process your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, aiResponse]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       const errorMessage: Message = {\n//         id: Date.now() + 1,\n//         text: \"Sorry, there was an error processing your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, errorMessage]);\n//     } finally {\n//       setIsTyping(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex flex-col min-h-screen bg-black text-white\">\n//       <div className=\"fixed inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-blue-900 via-black to-black opacity-50 z-0\"></div>\n//       <header className=\"relative z-10 p-4 border-b border-gray-800\">\n//         <h1 className=\"text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-600\">AI Research Assistant Chat</h1>\n//       </header>\n//       <main className=\"flex-grow relative z-10 p-4 overflow-hidden\">\n//         <GlowingCard className=\"h-full flex flex-col\">\n//           <div className=\"flex-grow overflow-y-auto mb-4 space-y-4\">\n//             {messages.map((message) => (\n//               <motion.div\n//                 key={message.id}\n//                 initial={{ opacity: 0, y: 20 }}\n//                 animate={{ opacity: 1, y: 0 }}\n//                 transition={{ duration: 0.5 }}\n//                 className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n//               >\n//                 <div className={`max-w-3/4 p-3 rounded-lg ${message.sender === 'user' ? 'bg-purple-700' : 'bg-blue-700'}`}>\n//                   <div className=\"flex items-center mb-1\">\n//                     {message.sender === 'user' ? (\n//                       <UserIcon className=\"w-4 h-4 mr-2\" />\n//                     ) : (\n//                       <BotIcon className=\"w-4 h-4 mr-2\" />\n//                     )}\n//                     <span className=\"text-xs text-gray-300\">\n//                       {message.timestamp.toLocaleTimeString()}\n//                     </span>\n//                   </div>\n//                   <p>{message.text}</p>\n//                 </div>\n//               </motion.div>\n//             ))}\n//             {isTyping && (\n//               <div className=\"flex justify-start\">\n//                 <div className=\"bg-blue-700 p-3 rounded-lg\">\n//                   <p>AI is typing...</p>\n//                 </div>\n//               </div>\n//             )}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <div className=\"flex items-center space-x-2\">\n//             <input\n//               type=\"text\"\n//               value={inputMessage}\n//               onChange={(e) => setInputMessage(e.target.value)}\n//               onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n//               placeholder=\"Type your message here...\"\n//               className=\"flex-grow p-2 rounded-full bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//             />\n//             <ShimmeringButton onClick={handleSendMessage} className=\"p-2 rounded-full\">\n//               <SendIcon className=\"w-6 h-6\" />\n//             </ShimmeringButton>\n//           </div>\n//         </GlowingCard>\n//       </main>\n//       <footer className=\"relative z-10 p-4 border-t border-gray-800 text-center text-sm text-gray-500\">\n//         © 2025 AI Research Assistant. All rights reserved.\n//       </footer>\n//     </div>\n//   )\n// }\n// export default function Chat() {\n//   return <ChatPage />\n// }\n// v1\n// \"use client\"\n// import React, { useState, useRef, useEffect } from 'react';\n// import { motion } from 'framer-motion';\n// import { SendIcon, BotIcon, UserIcon } from 'lucide-react';\n// interface Message {\n//   id: number;\n//   text: string;\n//   sender: 'user' | 'ai';\n//   timestamp: Date;\n// }\n// const GlowingCard = ({ children, className = \"\" }) => (\n//   <div className={`relative ${className}`}>\n//     <div className=\"absolute inset-0 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-lg blur opacity-75 transition duration-1000\"></div>\n//     <div className=\"relative bg-gray-900 bg-opacity-70 rounded-lg p-6 ring-1 ring-gray-800 shadow-xl\">\n//       {children}\n//     </div>\n//   </div>\n// );\n// const ShimmeringButton = ({ children, onClick, className = \"\" }) => (\n//   <button\n//     onClick={onClick}\n//     className={`relative px-4 py-2 font-bold text-white rounded-lg group ${className}`}\n//   >\n//     <span className=\"absolute inset-0 w-full h-full transition duration-300 transform -translate-x-1 -translate-y-1 bg-gradient-to-r from-cyan-600 to-purple-600 group-hover:translate-x-0 group-hover:translate-y-0\"></span>\n//     <span className=\"relative z-10 mix-blend-screen\">{children}</span>\n//   </button>\n// );\n// function ChatPage() {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [inputMessage, setInputMessage] = useState('');\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n//   useEffect(scrollToBottom, [messages]);\n//   const handleSendMessage = async () => {\n//     if (inputMessage.trim() === '') return;\n//     const newMessage: Message = {\n//       id: Date.now(),\n//       text: inputMessage,\n//       sender: 'user',\n//       timestamp: new Date(),\n//     };\n//     setMessages([...messages, newMessage]);\n//     setInputMessage('');\n//     setIsTyping(true);\n//     try {\n//       const response = await fetch('/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ message: inputMessage }),\n//       });\n//       const data = await response.json();\n//       const aiResponseText = data.outputs[0].outputs[0].outputs.message.message.text;\n//       const aiResponse: Message = {\n//         id: Date.now() + 1,\n//         text: aiResponseText || \"Sorry, I couldn't process your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, aiResponse]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       const errorMessage: Message = {\n//         id: Date.now() + 1,\n//         text: \"Sorry, there was an error processing your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, errorMessage]);\n//     } finally {\n//       setIsTyping(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex flex-col min-h-screen bg-gray-950 text-white\">\n//       <div className=\"fixed inset-0 bg-gradient-to-r from-gray-900 via-gray-950 to-black opacity-90 z-0\"></div>\n//       <header className=\"relative z-10 p-4 border-b border-gray-800\">\n//         <h1 className=\"text-3xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-teal-400 to-cyan-500\">\n//           ChatGPT-Style AI Chatbot\n//         </h1>\n//       </header>\n//       <main className=\"flex-grow relative z-10 p-4 overflow-hidden\">\n//         <GlowingCard className=\"h-full flex flex-col\">\n//           <div className=\"flex-grow overflow-y-auto mb-4 space-y-4\">\n//             {messages.map((message) => (\n//               <motion.div\n//                 key={message.id}\n//                 initial={{ opacity: 0, y: 20 }}\n//                 animate={{ opacity: 1, y: 0 }}\n//                 transition={{ duration: 0.5 }}\n//                 className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n//               >\n//                 <div className={`max-w-3/4 p-4 rounded-lg shadow-md ${message.sender === 'user' ? 'bg-gradient-to-r from-purple-700 to-indigo-700' : 'bg-gradient-to-r from-cyan-600 to-blue-700'}`}>\n//                   <div className=\"flex items-center mb-1\">\n//                     {message.sender === 'user' ? (\n//                       <UserIcon className=\"w-4 h-4 mr-2 text-white\" />\n//                     ) : (\n//                       <BotIcon className=\"w-4 h-4 mr-2 text-white\" />\n//                     )}\n//                     <span className=\"text-xs text-gray-400\">\n//                       {message.timestamp.toLocaleTimeString()}\n//                     </span>\n//                   </div>\n//                   <p className=\"text-white\">{message.text}</p>\n//                 </div>\n//               </motion.div>\n//             ))}\n//             {isTyping && (\n//               <div className=\"flex justify-start\">\n//                 <div className=\"bg-gradient-to-r from-cyan-600 to-blue-700 p-3 rounded-lg\">\n//                   <p>AI is typing...</p>\n//                 </div>\n//               </div>\n//             )}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <div className=\"flex items-center space-x-2\">\n//             <input\n//               type=\"text\"\n//               value={inputMessage}\n//               onChange={(e) => setInputMessage(e.target.value)}\n//               onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n//               placeholder=\"Type your message here...\"\n//               className=\"flex-grow p-2 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-cyan-500\"\n//             />\n//             <ShimmeringButton onClick={handleSendMessage} className=\"p-2 rounded-lg\">\n//               <SendIcon className=\"w-6 h-6 text-white\" />\n//             </ShimmeringButton>\n//           </div>\n//         </GlowingCard>\n//       </main>\n//       <footer className=\"relative z-10 p-4 border-t border-gray-800 text-center text-sm text-gray-400\">\n//         © 2025 ChatGPT-Style AI Chatbot. All rights reserved.\n//       </footer>\n//     </div>\n//   );\n// }\n// export default function Chat() {\n//   return <ChatPage />;\n// }\n// v2\n// \"use client\"\n// import React, { useState, useRef, useEffect } from 'react';\n// import { motion } from 'framer-motion';\n// import { SendIcon, BotIcon, UserIcon } from 'lucide-react';\n// interface Message {\n//   id: number;\n//   text: string;\n//   sender: 'user' | 'ai';\n//   timestamp: Date;\n// }\n// const GlowingCard = ({ children, className = \"\" }) => (\n//   <div className={`relative ${className}`}>\n//     <div className=\"absolute inset-0 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-lg blur opacity-75 transition duration-1000\"></div>\n//     <div className=\"relative bg-gray-900 bg-opacity-70 rounded-lg p-6 ring-1 ring-gray-800 shadow-xl\">\n//       {children}\n//     </div>\n//   </div>\n// );\n// const ShimmeringButton = ({ children, onClick, className = \"\" }) => (\n//   <button\n//     onClick={onClick}\n//     className={`relative px-4 py-2 font-bold text-white rounded-lg group ${className}`}\n//   >\n//     <span className=\"absolute inset-0 w-full h-full transition duration-300 transform -translate-x-1 -translate-y-1 bg-gradient-to-r from-cyan-600 to-purple-600 group-hover:translate-x-0 group-hover:translate-y-0\"></span>\n//     <span className=\"relative z-10 mix-blend-screen\">{children}</span>\n//   </button>\n// );\n// function ChatPage() {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [inputMessage, setInputMessage] = useState('');\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n//   useEffect(scrollToBottom, [messages]);\n//   const handleSendMessage = async () => {\n//     if (inputMessage.trim() === '') return;\n//     const newMessage: Message = {\n//       id: Date.now(),\n//       text: inputMessage,\n//       sender: 'user',\n//       timestamp: new Date(),\n//     };\n//     setMessages([...messages, newMessage]);\n//     setInputMessage('');\n//     setIsTyping(true);\n//     try {\n//       const response = await fetch('/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ message: inputMessage }),\n//       });\n//       const data = await response.json();\n//       const aiResponseText = data.outputs[0].outputs[0].outputs.message.message.text;\n//       const aiResponse: Message = {\n//         id: Date.now() + 1,\n//         text: aiResponseText || \"Sorry, I couldn't process your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, aiResponse]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       const errorMessage: Message = {\n//         id: Date.now() + 1,\n//         text: \"Sorry, there was an error processing your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, errorMessage]);\n//     } finally {\n//       setIsTyping(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex flex-col min-h-screen bg-gray-950 text-white\">\n//       <div className=\"fixed inset-0 bg-gradient-to-r from-gray-900 via-gray-950 to-black opacity-90 z-0\"></div>\n//       <header className=\"relative z-10 p-4 border-b border-gray-800\">\n//         <h1 className=\"text-3xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-teal-400 to-cyan-500\">\n//           ChatGPT-Style AI Chatbot\n//         </h1>\n//       </header>\n//       <main className=\"flex-grow relative z-10 p-4 overflow-hidden\">\n//         <GlowingCard className=\"h-full flex flex-col\">\n//           <div className=\"flex-grow overflow-y-auto mb-4 space-y-4\">\n//             {messages.map((message) => (\n//               <motion.div\n//                 key={message.id}\n//                 initial={{ opacity: 0, y: 20 }}\n//                 animate={{ opacity: 1, y: 0 }}\n//                 transition={{ duration: 0.5 }}\n//                 className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n//               >\n//                 <div className={`max-w-3/4 p-4 rounded-lg shadow-md ${message.sender === 'user' ? 'bg-gradient-to-r from-purple-700 to-indigo-700' : 'bg-gradient-to-r from-cyan-600 to-blue-700'}`}>\n//                   <div className=\"flex items-center mb-1\">\n//                     {message.sender === 'user' ? (\n//                       <UserIcon className=\"w-4 h-4 mr-2 text-white\" />\n//                     ) : (\n//                       <BotIcon className=\"w-4 h-4 mr-2 text-white\" />\n//                     )}\n//                     <span className=\"text-xs text-gray-400\">\n//                       {message.timestamp.toLocaleTimeString()}\n//                     </span>\n//                   </div>\n//                   <p className=\"text-white\">{message.text}</p>\n//                 </div>\n//               </motion.div>\n//             ))}\n//             {isTyping && (\n//               <div className=\"flex justify-start\">\n//                 <div className=\"bg-gradient-to-r from-cyan-600 to-blue-700 p-3 rounded-lg\">\n//                   <p>AI is typing...</p>\n//                 </div>\n//               </div>\n//             )}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <div className=\"flex items-center space-x-2\">\n//             <input\n//               type=\"text\"\n//               value={inputMessage}\n//               onChange={(e) => setInputMessage(e.target.value)}\n//               onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n//               placeholder=\"Type your message here...\"\n//               className=\"flex-grow p-2 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-cyan-500\"\n//             />\n//             <ShimmeringButton onClick={handleSendMessage} className=\"p-2 rounded-lg\">\n//               <SendIcon className=\"w-6 h-6 text-white\" />\n//             </ShimmeringButton>\n//           </div>\n//         </GlowingCard>\n//       </main>\n//       <footer className=\"relative z-10 p-4 border-t border-gray-800 text-center text-sm text-gray-400\">\n//         © 2025 ChatGPT-Style AI Chatbot. All rights reserved.\n//       </footer>\n//     </div>\n//   );\n// }\n// export default function Chat() {\n//   return <ChatPage />;\n// }\n// v3\n// \"use client\"\n// import React, { useState, useRef, useEffect } from 'react';\n// import { motion } from 'framer-motion';\n// import { SendIcon, BotIcon, UserIcon } from 'lucide-react';\n// interface Message {\n//   id: number;\n//   text: string;\n//   sender: 'user' | 'ai';\n//   timestamp: Date;\n// }\n// const GlowingCard = ({ children, className = \"\" }) => (\n//   <div className={`relative ${className}`}>\n//     <div className=\"absolute inset-0 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-lg blur opacity-75 transition duration-1000\"></div>\n//     <div className=\"relative bg-gray-900 bg-opacity-70 rounded-lg p-6 ring-1 ring-gray-800 shadow-xl\">\n//       {children}\n//     </div>\n//   </div>\n// );\n// const ShimmeringButton = ({ children, onClick, className = \"\" }) => (\n//   <button\n//     onClick={onClick}\n//     className={`relative px-4 py-2 font-bold text-white rounded-lg group ${className}`}\n//   >\n//     <span className=\"absolute inset-0 w-full h-full transition duration-300 transform -translate-x-1 -translate-y-1 bg-gradient-to-r from-cyan-600 to-purple-600 group-hover:translate-x-0 group-hover:translate-y-0\"></span>\n//     <span className=\"relative z-10 mix-blend-screen\">{children}</span>\n//   </button>\n// );\n// function ChatPage() {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [inputMessage, setInputMessage] = useState('');\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n//   useEffect(scrollToBottom, [messages]);\n//   const handleSendMessage = async () => {\n//     if (inputMessage.trim() === '') return;\n//     const newMessage: Message = {\n//       id: Date.now(),\n//       text: inputMessage,\n//       sender: 'user',\n//       timestamp: new Date(),\n//     };\n//     setMessages([...messages, newMessage]);\n//     setInputMessage('');\n//     setIsTyping(true);\n//     try {\n//       const response = await fetch('/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ message: inputMessage }),\n//       });\n//       const data = await response.json();\n//       const aiResponseText = data.outputs[0].outputs[0].outputs.message.message.text;\n//       const aiResponse: Message = {\n//         id: Date.now() + 1,\n//         text: aiResponseText || \"Sorry, I couldn't process your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, aiResponse]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       const errorMessage: Message = {\n//         id: Date.now() + 1,\n//         text: \"Sorry, there was an error processing your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, errorMessage]);\n//     } finally {\n//       setIsTyping(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex flex-col min-h-screen bg-gray-950 text-white\">\n//       <div className=\"fixed inset-0 bg-gradient-to-r from-gray-900 via-gray-950 to-black opacity-90 z-0\"></div>\n//       <header className=\"relative z-10 p-4 border-b border-gray-800\">\n//         <h1 className=\"text-3xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-teal-400 to-cyan-500\">\n//           ChatGPT-Style AI Chatbot\n//         </h1>\n//       </header>\n//       <main className=\"flex-grow relative z-10 p-4 overflow-hidden\">\n//         <GlowingCard className=\"h-full flex flex-col\">\n//           <div className=\"flex-grow overflow-y-auto mb-4 space-y-4\">\n//             {messages.map((message) => (\n//               <motion.div\n//                 key={message.id}\n//                 initial={{ opacity: 0, y: 20 }}\n//                 animate={{ opacity: 1, y: 0 }}\n//                 transition={{ duration: 0.5 }}\n//                 className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n//               >\n//                 <div className={`max-w-3/4 p-4 rounded-lg shadow-md ${message.sender === 'user' ? 'bg-gradient-to-r from-purple-700 to-indigo-700' : 'bg-gradient-to-r from-cyan-600 to-blue-700'}`}>\n//                   <div className=\"flex items-center mb-1\">\n//                     {message.sender === 'user' ? (\n//                       <UserIcon className=\"w-4 h-4 mr-2 text-white\" />\n//                     ) : (\n//                       <BotIcon className=\"w-4 h-4 mr-2 text-white\" />\n//                     )}\n//                     <span className=\"text-xs text-gray-400\">\n//                       {message.timestamp.toLocaleTimeString()}\n//                     </span>\n//                   </div>\n//                   <p className=\"text-white\">{message.text}</p>\n//                 </div>\n//               </motion.div>\n//             ))}\n//             {isTyping && (\n//               <div className=\"flex justify-start\">\n//                 <div className=\"bg-gradient-to-r from-cyan-600 to-blue-700 p-3 rounded-lg\">\n//                   <p>AI is typing...</p>\n//                 </div>\n//               </div>\n//             )}\n//             <div ref={messagesEndRef} />\n//           </div>\n//         </GlowingCard>\n//       </main>\n//       <footer className=\"relative z-10 p-4 border-t border-gray-800\">\n//         <div className=\"flex items-center space-x-2\">\n//           <input\n//             type=\"text\"\n//             value={inputMessage}\n//             onChange={(e) => setInputMessage(e.target.value)}\n//             onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n//             placeholder=\"Type your message here...\"\n//             className=\"flex-grow p-2 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-cyan-500\"\n//           />\n//           <ShimmeringButton onClick={handleSendMessage} className=\"p-2 rounded-lg\">\n//             <SendIcon className=\"w-6 h-6 text-white\" />\n//           </ShimmeringButton>\n//         </div>\n//       </footer>\n//     </div>\n//   );\n// }\n// export default function Chat() {\n//   return <ChatPage />;\n// }\n// v4\n// \"use client\";\n// import React, { useState, useRef, useEffect } from 'react';\n// import { motion } from 'framer-motion';\n// import { SendIcon, BotIcon, UserIcon } from 'lucide-react';\n// interface Message {\n//   id: number;\n//   text: string;\n//   sender: 'user' | 'ai';\n//   timestamp: Date;\n// }\n// const GlowingCard = ({ children, className = \"\" }) => (\n//   <div className={`relative ${className}`}>\n//     <div className=\"absolute inset-0 bg-gradient-to-r from-purple-500 to-teal-500 rounded-lg blur opacity-50 transition duration-1000\"></div>\n//     <div className=\"relative bg-gray-800 bg-opacity-80 rounded-lg p-6 ring-1 ring-gray-700 shadow-xl\">\n//       {children}\n//     </div>\n//   </div>\n// );\n// const ShimmeringButton = ({ children, onClick, className = \"\" }) => (\n//   <button\n//     onClick={onClick}\n//     className={`relative px-6 py-3 font-medium text-white rounded-full group ${className}`}\n//   >\n//     <span className=\"absolute inset-0 w-full h-full transition duration-300 transform -translate-x-1 -translate-y-1 bg-gradient-to-r from-teal-500 to-purple-500 group-hover:translate-x-0 group-hover:translate-y-0 rounded-full\"></span>\n//     <span className=\"relative z-10 mix-blend-screen\">{children}</span>\n//   </button>\n// );\n// function ChatPage() {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [inputMessage, setInputMessage] = useState('');\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n//   useEffect(scrollToBottom, [messages]);\n//   const handleSendMessage = async () => {\n//     if (inputMessage.trim() === '') return;\n//     const newMessage: Message = {\n//       id: Date.now(),\n//       text: inputMessage,\n//       sender: 'user',\n//       timestamp: new Date(),\n//     };\n//     setMessages([...messages, newMessage]);\n//     setInputMessage('');\n//     setIsTyping(true);\n//     try {\n//       const response = await fetch('/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ message: inputMessage }),\n//       });\n//       const data = await response.json();\n//       const aiResponseText = data.outputs[0].outputs[0].outputs.message.message.text;\n//       const aiResponse: Message = {\n//         id: Date.now() + 1,\n//         text: aiResponseText || \"Sorry, I couldn't process your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, aiResponse]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       const errorMessage: Message = {\n//         id: Date.now() + 1,\n//         text: \"Sorry, there was an error processing your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//       };\n//       setMessages(prevMessages => [...prevMessages, errorMessage]);\n//     } finally {\n//       setIsTyping(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex flex-col min-h-screen bg-gradient-to-r from-gray-900 to-black text-white\">\n//       <div className=\"fixed inset-0 bg-gradient-to-r from-gray-900 via-purple-800 to-teal-900 opacity-90 z-0\"></div>\n//       <header className=\"relative z-10 p-6 border-b border-gray-700\">\n//         <h1 className=\"text-4xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-teal-400 to-purple-600\">\n//           Social Media Performance Analyzer\n//         </h1>\n//       </header>\n//       <main className=\"flex-grow relative z-10 p-6 overflow-hidden\">\n//         <GlowingCard className=\"h-full flex flex-col\">\n//           <div className=\"flex-grow overflow-y-auto mb-4 space-y-4\">\n//             {messages.map((message) => (\n//               <motion.div\n//                 key={message.id}\n//                 initial={{ opacity: 0, y: 20 }}\n//                 animate={{ opacity: 1, y: 0 }}\n//                 transition={{ duration: 0.5 }}\n//                 className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n//               >\n//                 <div className={`max-w-3/4 p-4 rounded-lg shadow-lg ${message.sender === 'user' ? 'bg-gradient-to-r from-teal-600 to-teal-800' : 'bg-gradient-to-r from-purple-600 to-purple-800'}`}>\n//                   <div className=\"flex items-center mb-2\">\n//                     {message.sender === 'user' ? (\n//                       <UserIcon className=\"w-5 h-5 mr-2 text-white\" />\n//                     ) : (\n//                       <BotIcon className=\"w-5 h-5 mr-2 text-white\" />\n//                     )}\n//                     <span className=\"text-xs text-gray-300\">\n//                       {message.timestamp.toLocaleTimeString()}\n//                     </span>\n//                   </div>\n//                   <p className=\"text-white\">{message.text}</p>\n//                 </div>\n//               </motion.div>\n//             ))}\n//             {isTyping && (\n//               <div className=\"flex justify-start\">\n//                 <div className=\"bg-gradient-to-r from-teal-500 to-teal-600 p-3 rounded-lg text-white\">\n//                   <p>AI is typing...</p>\n//                 </div>\n//               </div>\n//             )}\n//             <div ref={messagesEndRef} />\n//           </div>\n//         </GlowingCard>\n//       </main>\n//       <footer className=\"relative z-10 p-6 border-t border-gray-700\">\n//         <div className=\"flex items-center space-x-4\">\n//           <input\n//             type=\"text\"\n//             value={inputMessage}\n//             onChange={(e) => setInputMessage(e.target.value)}\n//             onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n//             placeholder=\"Type your message...\"\n//             className=\"flex-grow p-4 rounded-lg bg-gray-700 text-white focus:outline-none focus:ring-2 focus:ring-teal-400\"\n//           />\n//           <ShimmeringButton onClick={handleSendMessage}>\n//             <SendIcon className=\"w-6 h-6 text-white\" />\n//           </ShimmeringButton>\n//         </div>\n//       </footer>\n//     </div>\n//   );\n// }\n// export default function Chat() {\n//   return <ChatPage />;\n// }\n// // v5\n// \"use client\";\n// import { ReactNode } from 'react';\n// import React, { useState, useRef, useEffect } from 'react';\n// import { SendIcon, BotIcon, UserIcon, Loader2, HomeIcon } from 'lucide-react';\n// interface Message {\n//   id: number;\n//   text: string;\n//   sender: 'user' | 'ai';\n//   timestamp: Date;\n//   format?: 'text' | 'structured';\n//   structuredContent?: {\n//     title?: string;\n//     sections?: {\n//       heading?: string;\n//       content: string[];\n//     }[];\n//   };\n// }\n// const MessageContainer = ({ children, className = \"\" }: { children: ReactNode; className?: string }) => (\n//   <div className={`w-full max-w-5xl mx-auto ${className}`}>\n//     {children}\n//   </div>\n// );\n// interface Section {\n//   heading?: string;\n//   content: string[]; // Array of strings for list items\n// }\n// interface ContentProps {\n//   title?: string;\n//   sections?: Section[]; // Array of sections\n// }\n// const StructuredMessage: React.FC<{ content: ContentProps }> = ({ content }) => (\n//   <div className=\"space-y-4\">\n//     {content.title && (\n//       <h3 className=\"text-lg font-semibold text-gray-200 mb-2\">\n//         {content.title}\n//       </h3>\n//     )}\n//     {content.sections?.map((section, index) => (\n//       <div key={index} className=\"space-y-2\">\n//         {section.heading && (\n//           <h4 className=\"text-md font-medium text-gray-300\">\n//             {section.heading}\n//           </h4>\n//         )}\n//         <ul className=\"space-y-2\">\n//           {section.content.map((item, itemIndex) => (\n//             <li key={itemIndex} className=\"flex items-start space-x-2\">\n//               <span className=\"text-blue-400 mt-1\">•</span>\n//               <span className=\"text-gray-100\">{item}</span>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     ))}\n//   </div>\n// );\n// function ChatPage() {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [inputMessage, setInputMessage] = useState('');\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n//   useEffect(scrollToBottom, [messages]);\n//   const handleHomeClick = (e: React.MouseEvent) => {\n//     if (!confirm('Are you sure you want to leave the chat?')) {\n//       e.preventDefault();\n//     }\n//   };\n//   const formatAIResponse = (text: string) => {\n//     try {\n//       const parsed = JSON.parse(text);\n//       if (parsed.sections || parsed.title) {\n//         return {\n//           format: 'structured',\n//           structuredContent: parsed\n//         };\n//       }\n//     } catch (e) {\n//       // If not JSON or doesn't match our structure, treat as regular text\n//     }\n//     return {\n//       format: 'text',\n//       text\n//     };\n//   };\n//   const handleSendMessage = async () => {\n//     if (inputMessage.trim() === '') return;\n//     const newMessage: Message = {\n//       id: Date.now(),\n//       text: inputMessage,\n//       sender: 'user',\n//       timestamp: new Date(),\n//       format: 'text'\n//     };\n//     setMessages([...messages, newMessage]);\n//     setInputMessage('');\n//     setIsTyping(true);\n//     try {\n//       const response = await fetch('/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ message: inputMessage }),\n//       });\n//       const data = await response.json();\n//       const aiResponseText = data.outputs[0].outputs[0].outputs.message.message.text;\n//       const formattedResponse = formatAIResponse(aiResponseText);\n//       // Example interface for Message\n//       interface Message {\n//         id: number;\n//         text: string;\n//         sender: \"user\" | \"ai\";\n//         timestamp: Date;\n//         format: \"text\" | \"structured\" | undefined;\n//         structuredContent?: any;\n//       }\n//       const aiResponse: Message = {\n//         id: Date.now() + 1,\n//         text: formattedResponse.format === \"text\" ? formattedResponse.text || \"\" : \"\",\n//         sender: \"ai\",\n//         timestamp: new Date(),\n//         format: formattedResponse.format === \"text\" || formattedResponse.format === \"structured\"\n//           ? formattedResponse.format\n//           : undefined, // Narrow down to valid types\n//         structuredContent:\n//           formattedResponse.format === \"structured\" ? formattedResponse.structuredContent || undefined : undefined,\n//       };\n//       setMessages((prevMessages) => [...prevMessages, aiResponse as Message]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       const errorMessage: Message = {\n//         id: Date.now() + 1,\n//         text: \"Sorry, there was an error processing your request.\",\n//         sender: 'ai',\n//         timestamp: new Date(),\n//         format: 'text'\n//       };\n//       setMessages(prevMessages => [...prevMessages, errorMessage]);\n//     } finally {\n//       setIsTyping(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex flex-col h-screen bg-black text-gray-100\">\n//       <header className=\"border-b border-gray-800 bg-gray-900 p-4 backdrop-blur-lg bg-opacity-80\">\n//         <div className=\"max-w-5xl mx-auto flex items-center justify-between\">\n//           <div className=\"flex items-center space-x-4\">\n//             <a\n//               href=\"/\"\n//               onClick={handleHomeClick}\n//               className=\"p-2 rounded-lg hover:bg-gray-800 transition-colors duration-200 flex items-center justify-center\"\n//             >\n//               <HomeIcon className=\"w-5 h-5 text-gray-400 hover:text-gray-200\" />\n//             </a>\n//             <h1 className=\"text-2xl font-bold bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent\">\n//               Social Media Performance Analyzer\n//             </h1>\n//           </div>\n//           <div className=\"flex items-center space-x-2 text-sm text-gray-400\">\n//             <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n//             <span>AI Active</span>\n//           </div>\n//         </div>\n//       </header>\n//       <main className=\"flex-grow overflow-hidden relative\">\n//         <div className=\"absolute inset-0 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-transparent\">\n//           {messages.map((message) => (\n//             <div\n//               key={message.id}\n//               className={`px-4 py-6 ${message.sender === 'ai' ? 'bg-gray-900' : 'bg-black'\n//                 } transition-colors duration-300`}\n//             >\n//               <MessageContainer>\n//                 <div className=\"flex space-x-4 items-start\">\n//                   <div className=\"flex-shrink-0 mt-1\">\n//                     {message.sender === 'user' ? (\n//                       <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-purple-500 to-blue-500 flex items-center justify-center shadow-lg\">\n//                         <UserIcon className=\"w-5 h-5 text-white\" />\n//                       </div>\n//                     ) : (\n//                       <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center shadow-lg\">\n//                         <BotIcon className=\"w-5 h-5 text-white\" />\n//                       </div>\n//                     )}\n//                   </div>\n//                   <div className=\"flex-grow space-y-2\">\n//                     <div className=\"flex items-center space-x-2\">\n//                       <span className=\"text-sm font-medium text-gray-400\">\n//                         {message.sender === 'user' ? 'You' : 'AI Assistant'}\n//                       </span>\n//                       <span className=\"text-xs text-gray-500\">\n//                         {message.timestamp.toLocaleTimeString()}\n//                       </span>\n//                     </div>\n//                     {message.format === 'structured' ? (\n//                       <StructuredMessage content={message.structuredContent} />\n//                     ) : (\n//                       <p className=\"text-gray-100 leading-relaxed whitespace-pre-wrap\">\n//                         {message.text}\n//                       </p>\n//                     )}\n//                   </div>\n//                 </div>\n//               </MessageContainer>\n//             </div>\n//           ))}\n//           {isTyping && (\n//             <div className=\"px-4 py-6 bg-gray-900\">\n//               <MessageContainer>\n//                 <div className=\"flex space-x-4 items-start\">\n//                   <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center shadow-lg\">\n//                     <BotIcon className=\"w-5 h-5 text-white\" />\n//                   </div>\n//                   <div className=\"flex items-center space-x-2\">\n//                     <Loader2 className=\"w-4 h-4 animate-spin text-blue-400\" />\n//                     <span className=\"text-gray-400 text-sm\">AI is thinking...</span>\n//                   </div>\n//                 </div>\n//               </MessageContainer>\n//             </div>\n//           )}\n//           <div ref={messagesEndRef} />\n//         </div>\n//       </main>\n//       <footer className=\"border-t border-gray-800 bg-gray-900 p-4 backdrop-blur-lg bg-opacity-80\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <div className=\"flex space-x-4 items-center\">\n//             <div className=\"flex-grow relative\">\n//               <input\n//                 type=\"text\"\n//                 value={inputMessage}\n//                 onChange={(e) => setInputMessage(e.target.value)}\n//                 onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n//                 placeholder=\"Message Social Media Performance Analyzer...\"\n//                 className=\"w-full p-4 rounded-xl bg-gray-800 text-gray-100 placeholder-gray-400 border border-gray-700 focus:border-blue-500 focus:ring-1 focus:ring-blue-500 transition-all duration-200 outline-none\"\n//               />\n//             </div>\n//             <button\n//               onClick={handleSendMessage}\n//               className=\"p-4 rounded-xl bg-gradient-to-r from-blue-500 to-purple-500 text-white hover:opacity-90 transition-opacity duration-200 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 outline-none shadow-lg\"\n//             >\n//               <SendIcon className=\"w-5 h-5\" />\n//             </button>\n//           </div>\n//           <div className=\"mt-2 text-xs text-gray-500 text-center\">\n//             AI Assistant is ready to analyze your social media performance\n//           </div>\n//         </div>\n//       </footer>\n//     </div>\n//   );\n// }\n// export default function Chat() {\n//   return <ChatPage />;\n// }\n// v7\n// \"use client\";\n// import { ReactNode } from \"react\";\n// import React, { useState, useRef, useEffect } from \"react\";\n// import { SendIcon, BotIcon, UserIcon, Loader2, HomeIcon } from \"lucide-react\";\n// // Message interface with optional structuredContent\n// interface Message {\n//   id: number;\n//   text: string;\n//   sender: \"user\" | \"ai\";\n//   timestamp: Date;\n//   format?: \"text\" | \"structured\";\n//   structuredContent?: {\n//     title?: string;\n//     sections?: {\n//       heading?: string;\n//       content: string[];\n//     }[];\n//   };\n// }\n// // MessageContainer component\n// const MessageContainer = ({ children, className = \"\" }: { children: ReactNode; className?: string }) => (\n//   <div className={`w-full max-w-5xl mx-auto ${className}`}>{children}</div>\n// );\n// // StructuredMessage component with contentProps\n// interface Section {\n//   heading?: string;\n//   content: string[];\n// }\n// interface ContentProps {\n//   title?: string;\n//   sections?: Section[];\n// }\n// const StructuredMessage: React.FC<{ content?: ContentProps }> = ({ content }) => {\n//   if (!content) return <p>No structured content available</p>;\n//   return (\n//     <div className=\"space-y-4\">\n//       {content.title && (\n//         <h3 className=\"text-lg font-semibold text-gray-200 mb-2\">{content.title}</h3>\n//       )}\n//       {content.sections?.map((section, index) => (\n//         <div key={index} className=\"space-y-2\">\n//           {section.heading && <h4 className=\"text-md font-medium text-gray-300\">{section.heading}</h4>}\n//           <ul className=\"space-y-2\">\n//             {section.content.map((item, itemIndex) => (\n//               <li key={itemIndex} className=\"flex items-start space-x-2\">\n//                 <span className=\"text-blue-400 mt-1\">•</span>\n//                 <span className=\"text-gray-100\">{item}</span>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n// function ChatPage() {\n//   const [messages, setMessages] = useState<Message[]>([]);\n//   const [inputMessage, setInputMessage] = useState(\"\");\n//   const [isTyping, setIsTyping] = useState(false);\n//   const messagesEndRef = useRef<HTMLDivElement>(null);\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n//   };\n//   useEffect(scrollToBottom, [messages]);\n//   const handleHomeClick = (e: React.MouseEvent) => {\n//     if (!confirm(\"Are you sure you want to leave the chat?\")) {\n//       e.preventDefault();\n//     }\n//   };\n//   // Format AI response and handle JSON parsing\n//   const formatAIResponse = (text: string) => {\n//     try {\n//       const parsed = JSON.parse(text);\n//       if (parsed.sections || parsed.title) {\n//         return {\n//           format: \"structured\",\n//           structuredContent: parsed,\n//         };\n//       }\n//     } catch (e) {\n//       // Treat as regular text if JSON parsing fails\n//     }\n//     return {\n//       format: \"text\",\n//       text,\n//     };\n//   };\n//   const handleSendMessage = async () => {\n//     if (inputMessage.trim() === \"\") return;\n//     const newMessage: Message = {\n//       id: Date.now(),\n//       text: inputMessage,\n//       sender: \"user\",\n//       timestamp: new Date(),\n//       format: \"text\",\n//     };\n//     setMessages([...messages, newMessage]);\n//     setInputMessage(\"\");\n//     setIsTyping(true);\n//     try {\n//       const response = await fetch(\"/api/chat\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ message: inputMessage }),\n//       });\n//       const data = await response.json();\n//       const aiResponseText = data.outputs[0].outputs[0].outputs.message.message.text;\n//       const formattedResponse = formatAIResponse(aiResponseText);\n//       const aiResponse: Message = {\n//         id: Date.now() + 1,\n//         text: formattedResponse.format === \"text\" ? formattedResponse.text || \"\" : \"\",\n//         sender: \"ai\",\n//         timestamp: new Date(),\n//         format: formattedResponse.format,\n//         structuredContent:\n//           formattedResponse.format === \"structured\" ? formattedResponse.structuredContent : undefined,\n//       };\n//       setMessages((prevMessages) => [...prevMessages, aiResponse]);\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       const errorMessage: Message = {\n//         id: Date.now() + 1,\n//         text: \"Sorry, there was an error processing your request.\",\n//         sender: \"ai\",\n//         timestamp: new Date(),\n//         format: \"text\",\n//       };\n//       setMessages((prevMessages) => [...prevMessages, errorMessage]);\n//     } finally {\n//       setIsTyping(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex flex-col h-screen bg-black text-gray-100\">\n//       <header className=\"border-b border-gray-800 bg-gray-900 p-4 backdrop-blur-lg bg-opacity-80\">\n//         <div className=\"max-w-5xl mx-auto flex items-center justify-between\">\n//           <div className=\"flex items-center space-x-4\">\n//             <a\n//               href=\"/\"\n//               onClick={handleHomeClick}\n//               className=\"p-2 rounded-lg hover:bg-gray-800 transition-colors duration-200 flex items-center justify-center\"\n//             >\n//               <HomeIcon className=\"w-5 h-5 text-gray-400 hover:text-gray-200\" />\n//             </a>\n//             <h1 className=\"text-2xl font-bold bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent\">\n//               Social Media Performance Analyzer\n//             </h1>\n//           </div>\n//           <div className=\"flex items-center space-x-2 text-sm text-gray-400\">\n//             <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n//             <span>AI Active</span>\n//           </div>\n//         </div>\n//       </header>\n//       <main className=\"flex-grow overflow-hidden relative\">\n//         <div className=\"absolute inset-0 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-transparent\">\n//           {messages.map((message) => (\n//             <div\n//               key={message.id}\n//               className={`px-4 py-6 ${message.sender === \"ai\" ? \"bg-gray-900\" : \"bg-black\"} transition-colors duration-300`}\n//             >\n//               <MessageContainer>\n//                 <div className=\"flex space-x-4 items-start\">\n//                   <div className=\"flex-shrink-0 mt-1\">\n//                     {message.sender === \"user\" ? (\n//                       <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-purple-500 to-blue-500 flex items-center justify-center shadow-lg\">\n//                         <UserIcon className=\"w-5 h-5 text-white\" />\n//                       </div>\n//                     ) : (\n//                       <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center shadow-lg\">\n//                         <BotIcon className=\"w-5 h-5 text-white\" />\n//                       </div>\n//                     )}\n//                   </div>\n//                   <div className=\"flex-grow space-y-2\">\n//                     <div className=\"flex items-center space-x-2\">\n//                       <span className=\"text-sm font-medium text-gray-400\">\n//                         {message.sender === \"user\" ? \"You\" : \"AI Assistant\"}\n//                       </span>\n//                       <span className=\"text-xs text-gray-500\">\n//                         {message.timestamp.toLocaleTimeString()}\n//                       </span>\n//                     </div>\n//                     {message.format === \"structured\" ? (\n//                       <StructuredMessage content={message.structuredContent} />\n//                     ) : (\n//                       <p className=\"text-gray-100 leading-relaxed whitespace-pre-wrap\">{message.text}</p>\n//                     )}\n//                   </div>\n//                 </div>\n//               </MessageContainer>\n//             </div>\n//           ))}\n//           {isTyping && (\n//             <div className=\"px-4 py-6 bg-gray-900\">\n//               <MessageContainer>\n//                 <div className=\"flex space-x-4 items-start\">\n//                   <div className=\"w-8 h-8 rounded-lg bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center shadow-lg\">\n//                     <BotIcon className=\"w-5 h-5 text-white\" />\n//                   </div>\n//                   <div className=\"flex items-center space-x-2\">\n//                     <Loader2 className=\"w-4 h-4 animate-spin text-blue-400\" />\n//                     <span className=\"text-gray-400 text-sm\">AI is thinking...</span>\n//                   </div>\n//                 </div>\n//               </MessageContainer>\n//             </div>\n//           )}\n//           <div ref={messagesEndRef} />\n//         </div>\n//       </main>\n//       <footer className=\"border-t border-gray-800 bg-gray-900 p-4 backdrop-blur-lg bg-opacity-80\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <div className=\"flex space-x-4 items-center\">\n//             <div className=\"flex-grow relative\">\n//               <input\n//                 type=\"text\"\n//                 value={inputMessage}\n//                 onChange={(e) => setInputMessage(e.target.value)}\n//                 onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\n//                 placeholder=\"Message Social Media Performance Analyzer...\"\n//                 className=\"w-full p-4 rounded-xl bg-gray-800 text-gray-100 placeholder-gray-400 border border-gray-700 focus:border-blue-500 focus:ring-1 focus:ring-blue-500 transition-all duration-200 outline-none\"\n//               />\n//             </div>\n//             <button\n//               onClick={handleSendMessage}\n//               className=\"p-4 rounded-xl bg-gradient-to-r from-blue-500 to-purple-500 text-white hover:opacity-90 transition-opacity duration-200 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 outline-none shadow-lg\"\n//             >\n//               <SendIcon className=\"w-5 h-5\" />\n//             </button>\n//           </div>\n//           <div className=\"mt-2 text-xs text-gray-500 text-center\">\n//             AI Assistant is ready to analyze your social media performance\n//           </div>\n//         </div>\n//       </footer>\n//     </div>\n//   );\n// }\n// export default function Chat() {\n//   return <ChatPage />;\n// }\n//  v8\"use client\";\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nconst MessageContainer = ({ children, className = \"\" })=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `w-full max-w-5xl mx-auto ${className}`,\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n        lineNumber: 1425,\n        columnNumber: 3\n    }, undefined);\nconst StructuredMessage = ({ content })=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"space-y-4\",\n        children: [\n            content.title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                className: \"text-lg font-semibold text-gray-200 mb-2\",\n                children: content.title\n            }, void 0, false, {\n                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                lineNumber: 1443,\n                columnNumber: 7\n            }, undefined),\n            content.sections?.map((section, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-2\",\n                    children: [\n                        section.heading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                            className: \"text-md font-medium text-gray-300\",\n                            children: section.heading\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                            lineNumber: 1450,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                            className: \"space-y-2\",\n                            children: section.content.map((item, itemIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"flex items-start space-x-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-blue-400 mt-1\",\n                                            children: \"•\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                            lineNumber: 1457,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-gray-100\",\n                                            children: item\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                            lineNumber: 1458,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, itemIndex, true, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1456,\n                                    columnNumber: 13\n                                }, undefined))\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                            lineNumber: 1454,\n                            columnNumber: 9\n                        }, undefined)\n                    ]\n                }, index, true, {\n                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                    lineNumber: 1448,\n                    columnNumber: 7\n                }, undefined))\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n        lineNumber: 1441,\n        columnNumber: 3\n    }, undefined);\nfunction ChatPage() {\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [inputMessage, setInputMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isTyping, setIsTyping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const scrollToBottom = ()=>{\n        messagesEndRef.current?.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(scrollToBottom, [\n        messages\n    ]);\n    const handleHomeClick = (e)=>{\n        if (!confirm(\"Are you sure you want to leave the chat?\")) {\n            e.preventDefault();\n        }\n    };\n    // Format AI response and handle JSON parsing\n    const formatAIResponse = (text)=>{\n        try {\n            const parsed = JSON.parse(text);\n            if (parsed.sections || parsed.title) {\n                return {\n                    format: \"structured\",\n                    structuredContent: parsed\n                };\n            }\n        } catch (e) {\n        // Treat as regular text if JSON parsing fails\n        }\n        return {\n            format: \"text\",\n            text\n        };\n    };\n    const handleSendMessage = async ()=>{\n        if (inputMessage.trim() === \"\") return;\n        const newMessage = {\n            id: Date.now(),\n            text: inputMessage,\n            sender: \"user\",\n            timestamp: new Date(),\n            format: \"text\"\n        };\n        setMessages([\n            ...messages,\n            newMessage\n        ]);\n        setInputMessage(\"\");\n        setIsTyping(true);\n        try {\n            const response = await fetch(\"/api/chat\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    message: inputMessage\n                })\n            });\n            const data = await response.json();\n            const aiResponseText = data.outputs[0].outputs[0].outputs.message.message.text;\n            const formattedResponse = formatAIResponse(aiResponseText);\n            // Example interface for Message\n            const aiResponse = {\n                id: Date.now() + 1,\n                text: formattedResponse.format === \"text\" ? formattedResponse.text || \"\" : \"\",\n                sender: \"ai\",\n                timestamp: new Date(),\n                format: formattedResponse.format,\n                structuredContent: formattedResponse.format === \"structured\" ? formattedResponse.structuredContent : undefined\n            };\n            setMessages((prevMessages)=>[\n                    ...prevMessages,\n                    aiResponse\n                ]);\n        } catch (error) {\n            console.error(\"Error:\", error);\n            const errorMessage = {\n                id: Date.now() + 1,\n                text: \"Sorry, there was an error processing your request.\",\n                sender: \"ai\",\n                timestamp: new Date(),\n                format: \"text\"\n            };\n            setMessages((prevMessages)=>[\n                    ...prevMessages,\n                    errorMessage\n                ]);\n        } finally{\n            setIsTyping(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col h-screen bg-black text-gray-100\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"border-b border-gray-800 bg-gray-900 p-4 backdrop-blur-lg bg-opacity-80\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-5xl mx-auto flex items-center justify-between\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                    href: \"/\",\n                                    onClick: handleHomeClick,\n                                    className: \"p-2 rounded-lg hover:bg-gray-800 transition-colors duration-200 flex items-center justify-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                        className: \"w-5 h-5 text-gray-400 hover:text-gray-200\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                        lineNumber: 1569,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1564,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                    className: \"text-2xl font-bold bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent\",\n                                    children: \"Social Media Performance Analyzer\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1571,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                            lineNumber: 1563,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center space-x-2 text-sm text-gray-400\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"w-2 h-2 bg-green-500 rounded-full animate-pulse\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1576,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    children: \"AI Active\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1577,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                            lineNumber: 1575,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                    lineNumber: 1562,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                lineNumber: 1561,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"flex-grow overflow-hidden relative\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute inset-0 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-transparent\",\n                    children: [\n                        messages.map((message)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: `px-4 py-6 ${message.sender === \"ai\" ? \"bg-gray-900\" : \"bg-black\"} transition-colors duration-300`,\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MessageContainer, {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex space-x-4 items-start\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex-shrink-0 mt-1\",\n                                                children: message.sender === \"user\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"w-8 h-8 rounded-lg bg-gradient-to-br from-purple-500 to-blue-500 flex items-center justify-center shadow-lg\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                                        className: \"w-5 h-5 text-white\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                        lineNumber: 1595,\n                                                        columnNumber: 25\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                    lineNumber: 1594,\n                                                    columnNumber: 23\n                                                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"w-8 h-8 rounded-lg bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center shadow-lg\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                        className: \"w-5 h-5 text-white\"\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                        lineNumber: 1599,\n                                                        columnNumber: 25\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                    lineNumber: 1598,\n                                                    columnNumber: 23\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                lineNumber: 1592,\n                                                columnNumber: 19\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex-grow space-y-2\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"flex items-center space-x-2\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"text-sm font-medium text-gray-400\",\n                                                                children: message.sender === \"user\" ? \"You\" : \"AI Assistant\"\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                                lineNumber: 1605,\n                                                                columnNumber: 23\n                                                            }, this),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"text-xs text-gray-500\",\n                                                                children: message.timestamp.toLocaleTimeString()\n                                                            }, void 0, false, {\n                                                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                                lineNumber: 1608,\n                                                                columnNumber: 23\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                        lineNumber: 1604,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    message.format === \"structured\" && message.structuredContent ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(StructuredMessage, {\n                                                        content: message.structuredContent\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                        lineNumber: 1613,\n                                                        columnNumber: 23\n                                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                        className: \"text-gray-100 leading-relaxed whitespace-pre-wrap\",\n                                                        children: message.text\n                                                    }, void 0, false, {\n                                                        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                        lineNumber: 1615,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                lineNumber: 1603,\n                                                columnNumber: 19\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                        lineNumber: 1591,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1590,\n                                    columnNumber: 15\n                                }, this)\n                            }, message.id, false, {\n                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                lineNumber: 1585,\n                                columnNumber: 13\n                            }, this)),\n                        isTyping && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"px-4 py-6 bg-gray-900\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MessageContainer, {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex space-x-4 items-start\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"w-8 h-8 rounded-lg bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center shadow-lg\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                className: \"w-5 h-5 text-white\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                lineNumber: 1629,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                            lineNumber: 1628,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center space-x-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                                    className: \"w-4 h-4 animate-spin text-blue-400\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                    lineNumber: 1632,\n                                                    columnNumber: 21\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-gray-400 text-sm\",\n                                                    children: \"AI is thinking...\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                                    lineNumber: 1633,\n                                                    columnNumber: 21\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                            lineNumber: 1631,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1627,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                lineNumber: 1626,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                            lineNumber: 1625,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            ref: messagesEndRef\n                        }, void 0, false, {\n                            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                            lineNumber: 1639,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                    lineNumber: 1583,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                lineNumber: 1582,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                className: \"border-t border-gray-800 bg-gray-900 p-4 backdrop-blur-lg bg-opacity-80\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"max-w-5xl mx-auto\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex space-x-4 items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex-grow relative\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"text\",\n                                    className: \"w-full px-4 py-2 bg-gray-800 text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                                    placeholder: \"Type a message...\",\n                                    value: inputMessage,\n                                    onChange: (e)=>setInputMessage(e.target.value),\n                                    onKeyDown: (e)=>{\n                                        if (e.key === \"Enter\") {\n                                            handleSendMessage();\n                                        }\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1647,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                lineNumber: 1646,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleSendMessage,\n                                className: \"p-2 bg-blue-500 rounded-full text-white hover:bg-blue-600 transition-colors\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_BotIcon_HomeIcon_Loader2_SendIcon_UserIcon_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                    className: \"w-5 h-5\"\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                    lineNumber: 1664,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                                lineNumber: 1660,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                        lineNumber: 1645,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                    lineNumber: 1644,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n                lineNumber: 1643,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\chat\\\\page.tsx\",\n        lineNumber: 1560,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ChatPage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./app/chat/page.tsx\n");

/***/ }),

/***/ "(rsc)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"399e644b5c3f\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0LWFwcC8uL2FwcC9nbG9iYWxzLmNzcz81YjYyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiMzk5ZTY0NGI1YzNmXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/globals.css\n");

/***/ }),

/***/ "(rsc)/./app/chat/page.tsx":
/*!***************************!*\
  !*** ./app/chat/page.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`D:\\Hackathon\\Level Super Mind Hackathon - 2025\\TC\\BitBots x Level SuperMind Hackathon\\BitBots_x_LevelSuperMindHackathon\\app\\chat\\page.tsx#default`));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/chat/page.tsx\n");

/***/ }),

/***/ "(rsc)/./app/layout.tsx":
/*!************************!*\
  !*** ./app/layout.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./app/globals.css\");\n\n\n\nconst metadata = {\n    title: \"AI Research Assistant\",\n    description: \"AI-powered research revolution\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: (next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2___default().className),\n            children: children\n        }, void 0, false, {\n            fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\layout.tsx\",\n            lineNumber: 19,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\Hackathon\\\\Level Super Mind Hackathon - 2025\\\\TC\\\\BitBots x Level SuperMind Hackathon\\\\BitBots_x_LevelSuperMindHackathon\\\\app\\\\layout.tsx\",\n        lineNumber: 18,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGF5b3V0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUlNQTtBQUpnQjtBQU1mLE1BQU1DLFdBQXFCO0lBQ2hDQyxPQUFPO0lBQ1BDLGFBQWE7QUFDZixFQUFDO0FBRWMsU0FBU0MsV0FBVyxFQUNqQ0MsUUFBUSxFQUdUO0lBQ0MscUJBQ0UsOERBQUNDO1FBQUtDLE1BQUs7a0JBQ1QsNEVBQUNDO1lBQUtDLFdBQVdULDJKQUFlO3NCQUFHSzs7Ozs7Ozs7Ozs7QUFHekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0LWFwcC8uL2FwcC9sYXlvdXQudHN4Pzk5ODgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2dsb2JhbHMuY3NzJ1xuaW1wb3J0IHR5cGUgeyBNZXRhZGF0YSB9IGZyb20gJ25leHQnXG5pbXBvcnQgeyBJbnRlciB9IGZyb20gJ25leHQvZm9udC9nb29nbGUnXG5cbmNvbnN0IGludGVyID0gSW50ZXIoeyBzdWJzZXRzOiBbJ2xhdGluJ10gfSlcblxuZXhwb3J0IGNvbnN0IG1ldGFkYXRhOiBNZXRhZGF0YSA9IHtcbiAgdGl0bGU6ICdBSSBSZXNlYXJjaCBBc3Npc3RhbnQnLFxuICBkZXNjcmlwdGlvbjogJ0FJLXBvd2VyZWQgcmVzZWFyY2ggcmV2b2x1dGlvbicsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb3RMYXlvdXQoe1xuICBjaGlsZHJlbixcbn06IHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVxufSkge1xuICByZXR1cm4gKFxuICAgIDxodG1sIGxhbmc9XCJlblwiPlxuICAgICAgPGJvZHkgY2xhc3NOYW1lPXtpbnRlci5jbGFzc05hbWV9PntjaGlsZHJlbn08L2JvZHk+XG4gICAgPC9odG1sPlxuICApXG59XG4iXSwibmFtZXMiOlsiaW50ZXIiLCJtZXRhZGF0YSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJSb290TGF5b3V0IiwiY2hpbGRyZW4iLCJodG1sIiwibGFuZyIsImJvZHkiLCJjbGFzc05hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__":
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__ ***!
  \**********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/lib/metadata/get-metadata-route */ \"(rsc)/./node_modules/next/dist/lib/metadata/get-metadata-route.js\");\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__);\n  \n\n  /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((props) => {\n    const imageData = {\"type\":\"image/x-icon\",\"sizes\":\"16x16\"}\n    const imageUrl = (0,next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__.fillMetadataSegment)(\".\", props.params, \"favicon.ico\")\n\n    return [{\n      ...imageData,\n      url: imageUrl + \"\",\n    }]\n  });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LW1ldGFkYXRhLWltYWdlLWxvYWRlci5qcz90eXBlPWZhdmljb24mc2VnbWVudD0mYmFzZVBhdGg9JnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMhLi9hcHAvZmF2aWNvbi5pY28/X19uZXh0X21ldGFkYXRhX18iLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsRUFBaUY7O0FBRWpGLEVBQUUsaUVBQWU7QUFDakIsdUJBQXVCO0FBQ3ZCLHFCQUFxQiw4RkFBbUI7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXQtYXBwLy4vYXBwL2Zhdmljb24uaWNvPzNlOTkiXSwic291cmNlc0NvbnRlbnQiOlsiICBpbXBvcnQgeyBmaWxsTWV0YWRhdGFTZWdtZW50IH0gZnJvbSAnbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9nZXQtbWV0YWRhdGEtcm91dGUnXG5cbiAgZXhwb3J0IGRlZmF1bHQgKHByb3BzKSA9PiB7XG4gICAgY29uc3QgaW1hZ2VEYXRhID0ge1widHlwZVwiOlwiaW1hZ2UveC1pY29uXCIsXCJzaXplc1wiOlwiMTZ4MTZcIn1cbiAgICBjb25zdCBpbWFnZVVybCA9IGZpbGxNZXRhZGF0YVNlZ21lbnQoXCIuXCIsIHByb3BzLnBhcmFtcywgXCJmYXZpY29uLmljb1wiKVxuXG4gICAgcmV0dXJuIFt7XG4gICAgICAuLi5pbWFnZURhdGEsXG4gICAgICB1cmw6IGltYWdlVXJsICsgXCJcIixcbiAgICB9XVxuICB9Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./app/favicon.ico?__next_metadata__\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/lucide-react"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fchat%2Fpage&page=%2Fchat%2Fpage&appPaths=%2Fchat%2Fpage&pagePath=private-next-app-dir%2Fchat%2Fpage.tsx&appDir=D%3A%5CHackathon%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5CTC%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5CBitBots_x_LevelSuperMindHackathon%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CHackathon%5CLevel%20Super%20Mind%20Hackathon%20-%202025%5CTC%5CBitBots%20x%20Level%20SuperMind%20Hackathon%5CBitBots_x_LevelSuperMindHackathon&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();